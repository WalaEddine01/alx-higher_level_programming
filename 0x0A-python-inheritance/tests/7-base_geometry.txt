this is for 7-base_geometry modual
----------------------------
importing the modual

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", 3)
>>> bg.integer_validator("name", "wal")
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", -3)
Traceback (most recent call last):
    ...
ValueError: name must be greater than 0
>>> bg.integer_validator("name", 0.3)
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", 0)
Traceback (most recent call last):
...
ValueError: name must be greater than 0
>>> bg.integer_validator("hello", 4)
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented
>>> bg.integer_validator("hello", 9)
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator("name")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator("name", [3])
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", 3, 3)
Traceback (most recent call last):
...
TypeError: integer_validator() takes 3 positional arguments but 4 were given
>>> bg.integer_validator("name", True)
>>> bg.integer_validator("name", None)
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.__class__.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 3 required positional arguments: 'self', 'name', and 'value'
>>> bg.integer_validator("", 4)
>>> bg.integer_validator(None, 3)
>>> bg.integer_validator("name", (3, 3))
Traceback (most recent call last):
...
TypeError: name must be an integer
